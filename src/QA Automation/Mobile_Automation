using System;  
using Microsoft.VisualStudio.TestTools.UnitTesting;  
using OpenQA.Selenium.Remote;  
   
namespace CalculatorAppiumTest  
{  
     [TestClass]  
     public class BasicScenarios  
     {  
         protected const string WindowsApplicationDriverUrl = "URL to application driver";  
         protected static RemoteWebDriver CalculatorSession;  
         protected static RemoteWebElement CalculatorResult;  
         protected static string OriginalCalculatorMode;  
   
         [ClassInitialize]  
         public static void Setup(TestContext context)  
         {  
             // Launch the calculator app  
             DesiredCapabilities appCapabilities = new DesiredCapabilities();  
             appCapabilities.SetCapability("app", "Microsoft.WindowsCalculator_8wekyb3d8bbwe!App");  
             appCapabilities.SetCapability("platformName", "Windows");  
             appCapabilities.SetCapability("deviceName", "WindowsPC");  
             CalculatorSession = new RemoteWebDriver(new Uri(WindowsApplicationDriverUrl), appCapabilities);  
             Assert.IsNotNull(CalculatorSession);  
             CalculatorSession.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(3));  
   
             // Calculator in standard mode  
             CalculatorSession.FindElementByXPath("//Button[starts-with(@Name, \"Menu\")]").Click();  
             OriginalCalculatorMode = CalculatorSession.FindElementByXPath("//List[@AutomationId=\"FlyoutNav\"]//ListItem[@IsSelected=\"True\"]").Text;  
             CalculatorSession.FindElementByXPath("//ListItem[@Name=\"Standard Calculator\"]").Click();  
   
             // Use series of operation to locate the calculator result text element as a workaround  
             // We currently cannot query element by automationId without using modified appium dot net driver  
             // TODO: Use a proper appium/webdriver nuget package that allow us to query based on automationId  
             CalculatorSession.FindElementByXPath("//Button[@Name=\"Clear\"]").Click();  
             CalculatorSession.FindElementByXPath("//Button[@Name=\"Three\"]").Click();  
             CalculatorResult = CalculatorSession.FindElementByName("Display is  3 ") as RemoteWebElement;  
             Assert.IsNotNull(CalculatorResult);  
         }  
   
         [ClassCleanup]  
         public static void TearDown()  
         {  
             // Restore original mode before closing down  
             CalculatorSession.FindElementByXPath("//Button[starts-with(@Name, \"Menu\")]").Click();  
             CalculatorSession.FindElementByXPath("//ListItem[@Name=\"" + OriginalCalculatorMode + "\"]").Click();  
   
             CalculatorResult = null;  
             CalculatorSession.Dispose();  
             CalculatorSession = null;  
         }  
   
         [TestInitialize]  
         public void Clear()  
         {  
             CalculatorSession.FindElementByName("Clear").Click();  
             Assert.AreEqual("Display is  0 ", CalculatorResult.Text);  
         }  
   
         [TestMethod]  
         public void Addition()  
         {  
             CalculatorSession.FindElementByName("Five").Click();  
             CalculatorSession.FindElementByName("Plus").Click();  
             CalculatorSession.FindElementByName("Five").Click();  
             CalculatorSession.FindElementByName("Equals").Click();  
             Assert.AreEqual("Display is  10 ", CalculatorResult.Text);  
         }  
   
         [TestMethod]  
         public void Combination()  
         {  
             CalculatorSession.FindElementByXPath("//Button[@Name=\"Six\"]").Click();  
             CalculatorSession.FindElementByXPath("//Button[@Name=\"Multiply by\"]").Click();  
             CalculatorSession.FindElementByXPath("//Button[@Name=\"Four\"]").Click();  
             CalculatorSession.FindElementByXPath("//Button[@Name=\"Plus\"]").Click();  
             CalculatorSession.FindElementByXPath("//Button[@Name=\"One\"]").Click();  
             CalculatorSession.FindElementByXPath("//Button[@Name=\"Equals\"]").Click();  
             CalculatorSession.FindElementByXPath("//Button[@Name=\"Divide by\"]").Click();  
             CalculatorSession.FindElementByXPath("//Button[@Name=\"Five\"]").Click();  
             CalculatorSession.FindElementByXPath("//Button[@Name=\"Equals\"]").Click();  
             Assert.AreEqual("Display is  5 ", CalculatorResult.Text);  
         }  
   
         [TestMethod]  
         public void Division()  
         {  
             CalculatorSession.FindElementByName("Ten").Click();  
             CalculatorSession.FindElementByName("Ten").Click();  
             CalculatorSession.FindElementByName("Divide by").Click();  
             CalculatorSession.FindElementByName("Two").Click();  
             CalculatorSession.FindElementByName("Two").Click();  
             CalculatorSession.FindElementByName("Equals").Click();  
             Assert.AreEqual("Display is  5 ", CalculatorResult.Text);  
         }  
   
         [TestMethod]  
         public void Multiplication()  
         {  
             CalculatorSession.FindElementByName("Seven").Click();  
             CalculatorSession.FindElementByName("Multiply by").Click();  
             CalculatorSession.FindElementByName("Seven").Click();  
             CalculatorSession.FindElementByName("Equals").Click();  
             Assert.AreEqual("Display is  49 ", CalculatorResult.Text);  
         }  
   
         [TestMethod]  
         public void Subtraction()  
         {  
             CalculatorSession.FindElementByName("Seven").Click();  
             CalculatorSession.FindElementByName("Minus").Click();  
             CalculatorSession.FindElementByName("One").Click();  
             CalculatorSession.FindElementByName("Equals").Click();  
             Assert.AreEqual("Display is  6 ", CalculatorResult.Text);  
         }  
     }  
 }  
